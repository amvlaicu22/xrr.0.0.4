#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.0 on Tue Mar 24 11:41:06 2020 from "/home/a0/Projects/xrr/xrr_wxg.wxg"
#

import wx
import wx.grid

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class XRR_Frame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: XRR_Frame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1283, 768))
        
        # Menu Bar
        self.Xframe_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Quit", "")
        self.Bind(wx.EVT_MENU, self.ev_quit, id=item.GetId())
        self.Xframe_menubar.Append(wxglade_tmp_menu, "File")
        self.SetMenuBar(self.Xframe_menubar)
        # Menu Bar end
        self.button_load_data = wx.Button(self, wx.ID_ANY, "Load Data")
        self.text_ctrl_file = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_fit = wx.Button(self, wx.ID_ANY, "Fit Data")
        self.slider_fit = wx.Slider(self, wx.ID_ANY, 0, 0, 1000, style=wx.SL_AUTOTICKS | wx.SL_HORIZONTAL | wx.SL_LABELS)
        self.radio_box_fit = wx.RadioBox(self, wx.ID_ANY, "", choices=["L-M", "D-E"], majorDimension=2, style=wx.RA_SPECIFY_COLS)
        self.checkbox_ab = wx.CheckBox(self, wx.ID_ANY, "a0b0")
        self.checkbox_dd = wx.CheckBox(self, wx.ID_ANY, "d")
        self.checkbox_rh = wx.CheckBox(self, wx.ID_ANY, "rho")
        self.checkbox_sg = wx.CheckBox(self, wx.ID_ANY, "sg")
        self.panel_1 = wx.Panel(self, wx.ID_ANY, style=wx.BORDER_SIMPLE | wx.BORDER_SUNKEN)
        self.panel_2 = wx.Panel(self, wx.ID_ANY, style=wx.BORDER_SIMPLE | wx.BORDER_SUNKEN)
        self.button_load_layers = wx.Button(self, wx.ID_ANY, "Layers Load")
        self.button_save = wx.Button(self, wx.ID_ANY, "Save")
        self.button_layer_add = wx.Button(self, wx.ID_ANY, "insert")
        self.button_layer_del = wx.Button(self, wx.ID_ANY, "delete")
        self.button_update = wx.Button(self, wx.ID_ANY, "update")
        self.grid_1 = wx.grid.Grid(self, wx.ID_ANY, size=(1, 1))
        self.text_ctrl_log = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_RICH)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.ev_data_load, self.button_load_data)
        self.Bind(wx.EVT_BUTTON, self.ev_xrr_fit, self.button_fit)
        self.Bind(wx.EVT_BUTTON, self.ev_layers_load, self.button_load_layers)
        self.Bind(wx.EVT_BUTTON, self.ev_layers_save, self.button_save)
        self.Bind(wx.EVT_BUTTON, self.ev_layer_add, self.button_layer_add)
        self.Bind(wx.EVT_BUTTON, self.ev_layer_del, self.button_layer_del)
        self.Bind(wx.EVT_BUTTON, self.ev_profile_update, self.button_update)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: XRR_Frame.__set_properties
        self.SetTitle("frame")
        self.button_fit.SetBackgroundColour(wx.Colour(255, 110, 100))
        self.slider_fit.SetMinSize((134, 41))
        self.slider_fit.Enable(False)
        self.radio_box_fit.SetSelection(0)
        self.checkbox_ab.SetValue(1)
        self.checkbox_dd.SetValue(1)
        self.checkbox_rh.SetValue(1)
        self.checkbox_sg.SetValue(1)
        self.panel_1.SetMinSize((549, 276))
        self.panel_1.SetBackgroundColour(wx.Colour(216, 216, 191))
        self.panel_2.SetBackgroundColour(wx.Colour(216, 216, 191))
        self.button_load_layers.SetBackgroundColour(wx.Colour(181, 175, 255))
        self.button_save.SetBackgroundColour(wx.Colour(113, 255, 90))
        self.button_update.SetBackgroundColour(wx.Colour(255, 249, 116))
        self.grid_1.CreateGrid(10, 7)
        self.grid_1.EnableDragRowSize(0)
        self.grid_1.EnableDragGridSize(0)
        self.grid_1.SetSelectionMode(wx.grid.Grid.SelectRows)
        self.grid_1.SetColLabelValue(0, "Name")
        self.grid_1.SetColSize(0, 90)
        self.grid_1.SetColLabelValue(1, "Composition")
        self.grid_1.SetColSize(1, 150)
        self.grid_1.SetColLabelValue(2, "d [A]")
        self.grid_1.SetColSize(2, 75)
        self.grid_1.SetColLabelValue(3, "sg [A]")
        self.grid_1.SetColSize(3, 75)
        self.grid_1.SetColLabelValue(4, "[g/cm^3]")
        self.grid_1.SetColSize(4, 75)
        self.grid_1.SetColLabelValue(5, "[g/mol]")
        self.grid_1.SetColSize(5, 75)
        self.grid_1.SetColLabelValue(6, "[A^3]")
        self.grid_1.SetColSize(6, 75)
        self.grid_1.SetMinSize((645, 280))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: XRR_Frame.__do_layout
        sizer_V0 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_R = wx.BoxSizer(wx.VERTICAL)
        sizer_R2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_R1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_L = wx.BoxSizer(wx.VERTICAL)
        sizer_L2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_L1 = wx.BoxSizer(wx.HORIZONTAL)
        label_2 = wx.StaticText(self, wx.ID_ANY, "Data")
        sizer_L1.Add(label_2, 0, wx.ALL, 3)
        sizer_L1.Add(self.button_load_data, 0, wx.ALL, 1)
        sizer_L1.Add(self.text_ctrl_file, 1, wx.ALL | wx.EXPAND, 3)
        sizer_L.Add(sizer_L1, 0, wx.EXPAND, 0)
        sizer_L2.Add(self.button_fit, 0, wx.ALL, 3)
        sizer_L2.Add(self.slider_fit, 0, wx.EXPAND, 0)
        sizer_L2.Add(self.radio_box_fit, 0, wx.ALIGN_CENTER, 3)
        sizer_L2.Add(self.checkbox_ab, 0, wx.ALL, 3)
        sizer_L2.Add(self.checkbox_dd, 0, wx.ALL, 3)
        sizer_L2.Add(self.checkbox_rh, 0, wx.ALL, 3)
        sizer_L2.Add(self.checkbox_sg, 0, wx.ALL, 3)
        sizer_L.Add(sizer_L2, 0, wx.EXPAND, 0)
        sizer_L.Add(self.panel_1, 3, wx.ALL | wx.EXPAND, 2)
        sizer_L.Add(self.panel_2, 1, wx.ALL | wx.EXPAND, 2)
        sizer_V0.Add(sizer_L, 1, wx.EXPAND, 0)
        label_1 = wx.StaticText(self, wx.ID_ANY, "Multi layers")
        sizer_R1.Add(label_1, 0, wx.ALL, 3)
        sizer_R1.Add(self.button_load_layers, 0, wx.ALL, 3)
        sizer_R1.Add(self.button_save, 0, wx.ALL, 3)
        sizer_R.Add(sizer_R1, 0, wx.EXPAND, 0)
        sizer_R2.Add(self.button_layer_add, 0, wx.ALL, 3)
        sizer_R2.Add(self.button_layer_del, 0, wx.ALL, 3)
        sizer_R2.Add(self.button_update, 0, wx.ALL, 3)
        sizer_R.Add(sizer_R2, 0, wx.EXPAND, 0)
        sizer_R.Add(self.grid_1, 3, wx.EXPAND, 0)
        sizer_R.Add(self.text_ctrl_log, 1, wx.ALL | wx.EXPAND, 3)
        sizer_V0.Add(sizer_R, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_V0)
        self.Layout()
        # end wxGlade

    def ev_quit(self, event):  # wxGlade: XRR_Frame.<event_handler>
        print("Event handler 'ev_quit' not implemented!")
        event.Skip()

    def ev_data_load(self, event):  # wxGlade: XRR_Frame.<event_handler>
        print("Event handler 'ev_data_load' not implemented!")
        event.Skip()

    def ev_xrr_fit(self, event):  # wxGlade: XRR_Frame.<event_handler>
        print("Event handler 'ev_xrr_fit' not implemented!")
        event.Skip()

    def ev_layers_load(self, event):  # wxGlade: XRR_Frame.<event_handler>
        print("Event handler 'ev_layers_load' not implemented!")
        event.Skip()

    def ev_layers_save(self, event):  # wxGlade: XRR_Frame.<event_handler>
        print("Event handler 'ev_layers_save' not implemented!")
        event.Skip()

    def ev_layer_add(self, event):  # wxGlade: XRR_Frame.<event_handler>
        print("Event handler 'ev_layer_add' not implemented!")
        event.Skip()

    def ev_layer_del(self, event):  # wxGlade: XRR_Frame.<event_handler>
        print("Event handler 'ev_layer_del' not implemented!")
        event.Skip()

    def ev_profile_update(self, event):  # wxGlade: XRR_Frame.<event_handler>
        print("Event handler 'ev_profile_update' not implemented!")
        event.Skip()

# end of class XRR_Frame

class XRR_App(wx.App):
    def OnInit(self):
        self.Xframe = XRR_Frame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.Xframe)
        self.Xframe.Show()
        return True

# end of class XRR_App

if __name__ == "__main__":
    app = XRR_App(0)
    app.MainLoop()
